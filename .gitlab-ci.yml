# .gitlab-ci.yml
#
# ink-waterfall
#
# pipelines can be triggered manually in the web

stages:
  - declare-vars
  - test
  - compare-build

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       "100"
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  RUST_LIB_BACKTRACE:              "0"
  RUST_LOG:                        "info"
  CI_IMAGE:                        "paritytech/ink-waterfall-ci:latest"
  INK_EXAMPLES_PATH:               "./ink/examples"
  DELEGATOR_SUBCONTRACTS:          "accumulator adder subber"
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.vault-secrets:                    &vault-secrets
  secrets:
    REDISCLI_AUTH:
      vault:                       cicd/gitlab/parity/REDIS_AUTH@kv
      file:                        false
    GITHUB_TOKEN:
      vault:                       cicd/gitlab/parity/ink/GITHUB_TOKEN@kv
      file:                        false


.default-refs:                      &default-refs
  rules: 
  - if: $CI_PIPELINE_SOURCE == "web"
  - if: $CI_PIPELINE_SOURCE == "schedule"
  - if: $CI_COMMIT_REF_NAME == "master"
  - if: $CI_COMMIT_REF_NAME == "tags"
  - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
  - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1

.basic-env:                         &basic-env
  image:                           "${CI_IMAGE}"
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - substrate-contracts-node --version
    - cargo-contract --version
    - ./.scripts/pre_cache.sh
    - sccache -s
    - git show
  <<:                              *default-refs
  interruptible:                   true
  retry:
    max:                           2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure


.docker-env:                      &docker-env
  <<:                             *basic-env
  tags:
    - linux-docker

.kubernetes-env:                  &kubernetes-env
  <<:                             *basic-env
  before_script:                  []
  tags:
    - kubernetes-parity-build


.if-trigger-ref-is-master:           &if-trigger-ref-is-master
  before_script:
    - if [ "$TRGR_REF" == "master" ]; then
        echo "It makes no sense to compare $REDIS_SIZES_KEY to $REDIS_SIZES_KEY_MASTER."
        echo "Exiting gracefully."
        exit 0
      fi

.clone-repo:                       &clone-repo
  - git clone --depth 1 --branch ${UPSTREAM_BRANCH} ${UPSTREAM_REPO}

.start-substrate-contracts-node:                     &start-substrate-contracts-node
  - substrate-contracts-node --tmp --dev -lruntime::contracts=debug > /tmp/substrate-contracts-node.log 2>&1 &

.start-substrate-contracts-node-rand-extension:      &start-substrate-contracts-node-rand-extension
  - substrate-contracts-node-rand-extension --tmp --dev -lruntime::contracts=debug > /tmp/substrate-contracts-node-rand-extension.log 2>&1 &

.shutdown-substrate-contracts-node:                  &shutdown-substrate-contracts-node
  - pkill -f "substrate-contracts-node --tmp --dev"

.shutdown-substrate-contracts-node-rand-extension:   &shutdown-substrate-contracts-node-rand-extension
  - pkill -f "substrate-contracts-node-rand-extension --tmp --dev"


# needed vars have to be "exported" on a earlier stage
parent-vars:
  stage:                                             declare-vars
  <<:                                                *kubernetes-env
  variables:
      CI_IMAGE: "paritytech/tools"
  script:
    - |
      # default values
      UPSTREAM_BRANCH="master"
      UPSTREAM_BRANCH_REDIS_KEY="master"
      UPSTREAM_REPO="https://github.com/paritytech/ink.git"
      UPSTREAM_REPO_NAME="ink"

      echo ${TRGR_REF}
      if [ -n "$TRGR_REF" ] && [ "$TRGR_REF" != "master" ]; then
        PR_JSON=`curl -s https://api.github.com/repos/paritytech/ink/pulls/${TRGR_REF}`;
        UPSTREAM_BRANCH=`echo "${PR_JSON}" | jq -r .head.ref`;
        # Since we write the branch name to a file we need to remove any forward slashes
        # which may exist in the name
        UPSTREAM_BRANCH_REDIS_KEY=`echo "${UPSTREAM_BRANCH}" | sed 's/\//-/g'`;
        UPSTREAM_REPO=`echo "${PR_JSON}" | jq -r .head.repo.git_url`;
        UPSTREAM_REPO_NAME=`echo "${PR_JSON}" | jq -r .head.repo.name`;
      fi
    - echo "UPSTREAM_BRANCH=${UPSTREAM_BRANCH}" | tee -a parent-vars.env
    - echo "UPSTREAM_BRANCH_REDIS_KEY=${UPSTREAM_BRANCH_REDIS_KEY}" | tee -a parent-vars.env
    - echo "UPSTREAM_REPO=${UPSTREAM_REPO}" | tee -a parent-vars.env
    - echo "UPSTREAM_REPO_NAME=${UPSTREAM_REPO_NAME}" | tee -a parent-vars.env

    # REDIS_SIZES_KEY (e.g. ink-waterfall::ink::foo-add-feature::sizes)
    # defines a Redis key name where contract sizes will be stored frpm a upstrem above
    - echo "REDIS_SIZES_KEY=${CI_PROJECT_NAME}::${UPSTREAM_REPO_NAME}::${UPSTREAM_BRANCH_REDIS_KEY}::sizes" | tee -a parent-vars.env

    # REDIS_SIZES_KEY_MASTER (e.g. ink-waterfall::ink::master::sizes)
    #  defines a Redis key name for a upstream's master reference branch. contracts sizes stored there will be used for
    #  a comparison with contract sizes stored in REDIS_SIZES_KEY
    - echo "REDIS_SIZES_KEY_MASTER=${CI_PROJECT_NAME}::${UPSTREAM_REPO_NAME}::master::sizes" | tee -a parent-vars.env
  artifacts:
    reports:
      dotenv: parent-vars.env


polkadot-js-ui-ink-examples-compare:
  stage:                           compare-build
  <<:                              *kubernetes-env
  <<:                              *vault-secrets
  # Comparison is made only if a parent (trigger) was created on PRs. Otherwise we would
  # would be comparing `master` with `master`.
  #
  # TODO: While we lack comparison data for master, lets "compare" everything
  # <<:                              *if-trigger-ref-is-master
  script:
    - apt-get install -y --no-install-recommends jq
    - jq --version
    - echo "$REDIS_SIZES_KEY will be compared to $REDIS_SIZES_KEY_MASTER"
    # Deserialize comparison data
    - redis-cli -u $GITLAB_REDIS_URI --raw lrange $REDIS_SIZES_KEY 0 -1 | tee $REDIS_SIZES_KEY.csv
    - redis-cli -u $GITLAB_REDIS_URI --raw lrange $REDIS_SIZES_KEY_MASTER 0 -1 | tee $REDIS_SIZES_KEY_MASTER.csv
    - echo "Example,Not optimized,Optimized" > contract-size-diff.csv
    - csv-comparator $REDIS_SIZES_KEY_MASTER.csv $REDIS_SIZES_KEY.csv | tee --append contract-size-diff.csv
    - csv2md < contract-size-diff.csv > contract-size-diff.md
    - cat contract-size-diff.md
    - cat contract-size-diff.md | sed 's/$/\\n/g' | tr -d '\n' > contract-size-diff-nl.md
    - COMMENT=$(cat contract-size-diff-nl.md)
    - echo $COMMENT
    - TRGR_REF=1015
    - 'COMMENT_URL=$(curl --silent https://api.github.com/repos/paritytech/ink/issues/${TRGR_REF}/comments |
        jq -r ".[] | select(.user.login == \"paritytech-ci\") | .url" | head -n1)'
    - echo $COMMENT_URL
    - VERB="PUT"
    - 'if [ -z "$COMMENT_URL" ]; then
         VERB="POST";
         COMMENT_URL="https://api.github.com/repos/paritytech/ink/issues/${TRGR_REF}/comments";
       fi'
    - echo $VERB
    - echo $COMMENT_URL
    - 'RESP=$(curl -X "${VERB}" "${COMMENT_URL}"
        -H "Cookie: logged_in=no"
        -H "Authorization: token ${GITHUB_TOKEN}"
        -H "Content-Type: application/json; charset=utf-8"
        -d $"{
            \"body\": \"#### ðŸ“ŠðŸ“ˆ ðŸ¤– Did the contract size change?  ðŸ¤–ðŸ“‰ ðŸ“Š\\n${COMMENT}\n\n[Link to the run](https://gitlab.parity.io/parity/ink-waterfall/-/pipelines/${CI_PIPELINE_ID}).\"
        }")'
    - echo "api response ${RESP}"
    - COMMENT_ID=$(echo $RESP | jq -r .id)
    - echo "comment id of created comment ${COMMENT_ID}"
    - echo ${COMMENT_ID} > comment-id


build_badge:
  stage:                           compare-build
  rules:
    only:
      refs:
        - branches
        - master
        - tags
  <<:                              *docker-env
  before_script:
    - chmod +x .scripts/get-updated-badge-info.sh
  script:
    - echo "building badge"
  after_script:
    - .scripts/get-updated-badge-info.sh
  artifacts:
    paths:
        - badge.json
    when: always
    expire_in: 4 weeks
