# .gitlab-ci.yml
#
# ink-waterfall
#
# pipelines can be triggered manually in the web

stages:
  - declare-vars
  - test
  - build-and-compare

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       "100"
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  RUST_LIB_BACKTRACE:              "0"
  RUST_LOG:                        "info"
  CI_IMAGE:                        "paritytech/ink-waterfall-ci:latest"
  INK_EXAMPLES_PATH:               "./ink/examples"
  DELEGATOR_SUBCONTRACTS:          "accumulator adder subber"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

.basic-env:                         &basic-env
  image:                           "${CI_IMAGE}"
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - canvas --version
    - cargo-contract --version
    - ./.scripts/pre_cache.sh
    - sccache -s
    - git show
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                   # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
  dependencies:                    []
  interruptible:                   true
  retry:
    max:                           2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure


.docker-env:                      &docker-env
  <<:                             *basic-env
  tags:
    - linux-docker

.kubernetes-env:                  &kubernetes-env
  <<:                             *basic-env
  before_script:                  []
  tags:
    - kubernetes-parity-build


.clone-repo:                       &clone-repo
  - git clone --depth 1 --branch ${BRANCH} ${REPO}

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${REPO_NAME}_${BRANCH}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.start-canvas:                     &start-canvas
  - canvas --tmp --dev -lruntime::contracts=debug > /tmp/canvas.log 2>&1 &

.start-canvas-rand-extension:      &start-canvas-rand-extension
  - canvas-rand-extension --tmp --dev -lruntime::contracts=debug > /tmp/canvas-rand-extension.log 2>&1 &

.build-contracts:                  &build-contracts
  - for example in ${INK_EXAMPLES_PATH}/*/; do
      echo "./.scripts/build-contract.sh ${example} report.csv" >> /tmp/cmds;
    done
  - for contract in ${DELEGATOR_SUBCONTRACTS}; do
      echo "./.scripts/build-contract.sh ${INK_EXAMPLES_PATH}/delegator/${contract} report.csv" >> /tmp/cmds;
    done
  # TODO: looks like a race condition with possible simultaneous write to a single CSV file. Can break its formatting
  - parallel -j 2 < /tmp/cmds
  - mkdir -p artifacts/${REPO_NAME}_${BRANCH}
  - mv report.csv artifacts/${REPO_NAME}_${BRANCH}

.shutdown-canvas:                  &shutdown-canvas
  - pkill -f "canvas --tmp --dev"

.shutdown-canvas-rand-extension:   &shutdown-canvas-rand-extension
  - pkill -f "canvas-rand-extension --tmp --dev"

# needed vars have to "exported" on a earlier stage
parent-vars:
  stage:                           declare-vars
  <<:                              *kubernetes-env
  script:
    - BRANCH="master"
    - REPO="https://github.com/paritytech/ink.git"
    - REPO_NAME="ink"
    - echo ${TRGR_REF}
    - if [ -n "$TRGR_REF" ] && [ "$TRGR_REF" != "master" ]; then
        PR_JSON=`curl -s https://api.github.com/repos/paritytech/ink/pulls/${TRGR_REF}`;
        BRANCH=`echo "${PR_JSON}" | jq -r .head.ref`;
        REPO=`echo "${PR_JSON}" | jq -r .head.repo.git_url`;
        REPO_NAME=`echo "${PR_JSON}" | jq -r .head.repo.name`;
      fi
    - echo "BRANCH=${BRANCH}" | tee -a parent-vars.env
    - echo "REPO=${REPO}" | tee -a parent-vars.env
    - echo "REPO_NAME=${REPO_NAME}" | tee -a parent-vars.env
  artifacts:
    reports:
      dotenv: parent-vars.env

.canvas-ui-ink-examples-template:  &canvas-ui-ink-examples-template
  stage:                           test
  <<:                              *docker-env
  <<:                              *collect-artifacts
  script:
    - *clone-repo
    - *start-canvas
    - *build-contracts
      # - WATERFALL_SKIP_CONTRACT_BUILD=true cargo test --jobs 4 --features headless
  after_script:
    - *shutdown-canvas
  dependencies:
    - parent-vars

# added to a pipeline only if parent was created on master
canvas-ui-ink-examples-master:
  rules:
    - if: $BRANCH == "master"
  <<:                              *canvas-ui-ink-examples-template

# added to a pipeline only if parent was created by any other means (on prs basically)
canvas-ui-ink-examples-pr:
  rules:
    - if: $BRANCH != "master"
  <<:                              *canvas-ui-ink-examples-template

canvas-ui-ink-examples-compare-results:
  stage:                           build-and-compare
  <<:                              *kubernetes-env
  variables:
    CI_IMAGE: "alpine"
  script:
    - apk add tree
    - tree -a artifacts
  needs:
    # will run only if canvas-ui-ink-examples-pr exists on a pipeline
    - job: canvas-ui-ink-examples-pr
      artifacts: true


.polkadot-js-ui-ink-examples:
  stage:                           test
  <<:                              *docker-env
  script:
    - *clone-repo
    - *start-canvas
    - *build-contracts
    - WATERFALL_SKIP_CONTRACT_BUILD=true cargo test --jobs 4 --features headless,polkadot-js-ui
  after_script:
    - *shutdown-canvas

.canvas-ui-rand-extension:
  stage:                           test
  <<:                              *docker-env
  script:
    - *clone-repo
    - *start-canvas-rand-extension
    - cargo test --features headless -- --ignored rand_extension
  after_script:
    - *shutdown-canvas-rand-extension

.polkadot-js-ui-rand-extension:
  stage:                           test
  <<:                              *docker-env
  script:
    - *clone-repo
    - *start-canvas-rand-extension
    - cargo test --features headless,polkadot-js-ui -- --ignored rand_extension
  after_script:
    - *shutdown-canvas-rand-extension

build_badge:
  stage:                           build-and-compare
  rules:
    only:
      refs:
        - branches
        - master
        - tags
  <<:                              *docker-env
  before_script:
    - chmod +x .scripts/get-updated-badge-info.sh
  script:
    - echo "building badge"
  after_script:
    - .scripts/get-updated-badge-info.sh
  artifacts:
    paths:
        - badge.json
    when: always
    expire_in: 4 weeks
